// Code generated by protoc-gen-go. DO NOT EDIT.
// source: docker.proto

package docker

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateDockerRequest struct {
	Image                string                        `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	EnvVars              map[string]string             `protobuf:"bytes,2,rep,name=envVars,proto3" json:"envVars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PortBindings         map[string]string             `protobuf:"bytes,3,rep,name=portBindings,proto3" json:"portBindings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string             `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Mounts               []string                      `protobuf:"bytes,5,rep,name=mounts,proto3" json:"mounts,omitempty"`
	Resource             *CreateDockerRequestResources `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	Cmd                  []string                      `protobuf:"bytes,7,rep,name=cmd,proto3" json:"cmd,omitempty"`
	Dns                  []string                      `protobuf:"bytes,8,rep,name=dns,proto3" json:"dns,omitempty"`
	UsedPorts            []string                      `protobuf:"bytes,9,rep,name=usedPorts,proto3" json:"usedPorts,omitempty"`
	UseBridge            bool                          `protobuf:"varint,10,opt,name=useBridge,proto3" json:"useBridge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CreateDockerRequest) Reset()         { *m = CreateDockerRequest{} }
func (m *CreateDockerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDockerRequest) ProtoMessage()    {}
func (*CreateDockerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{0}
}

func (m *CreateDockerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDockerRequest.Unmarshal(m, b)
}
func (m *CreateDockerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDockerRequest.Marshal(b, m, deterministic)
}
func (m *CreateDockerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDockerRequest.Merge(m, src)
}
func (m *CreateDockerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDockerRequest.Size(m)
}
func (m *CreateDockerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDockerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDockerRequest proto.InternalMessageInfo

func (m *CreateDockerRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CreateDockerRequest) GetEnvVars() map[string]string {
	if m != nil {
		return m.EnvVars
	}
	return nil
}

func (m *CreateDockerRequest) GetPortBindings() map[string]string {
	if m != nil {
		return m.PortBindings
	}
	return nil
}

func (m *CreateDockerRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateDockerRequest) GetMounts() []string {
	if m != nil {
		return m.Mounts
	}
	return nil
}

func (m *CreateDockerRequest) GetResource() *CreateDockerRequestResources {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *CreateDockerRequest) GetCmd() []string {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (m *CreateDockerRequest) GetDns() []string {
	if m != nil {
		return m.Dns
	}
	return nil
}

func (m *CreateDockerRequest) GetUsedPorts() []string {
	if m != nil {
		return m.UsedPorts
	}
	return nil
}

func (m *CreateDockerRequest) GetUseBridge() bool {
	if m != nil {
		return m.UseBridge
	}
	return false
}

type CreateDockerRequestResources struct {
	MemoryMB             int32    `protobuf:"varint,1,opt,name=memoryMB,proto3" json:"memoryMB,omitempty"`
	Cpu                  float32  `protobuf:"fixed32,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDockerRequestResources) Reset()         { *m = CreateDockerRequestResources{} }
func (m *CreateDockerRequestResources) String() string { return proto.CompactTextString(m) }
func (*CreateDockerRequestResources) ProtoMessage()    {}
func (*CreateDockerRequestResources) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{0, 0}
}

func (m *CreateDockerRequestResources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDockerRequestResources.Unmarshal(m, b)
}
func (m *CreateDockerRequestResources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDockerRequestResources.Marshal(b, m, deterministic)
}
func (m *CreateDockerRequestResources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDockerRequestResources.Merge(m, src)
}
func (m *CreateDockerRequestResources) XXX_Size() int {
	return xxx_messageInfo_CreateDockerRequestResources.Size(m)
}
func (m *CreateDockerRequestResources) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDockerRequestResources.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDockerRequestResources proto.InternalMessageInfo

func (m *CreateDockerRequestResources) GetMemoryMB() int32 {
	if m != nil {
		return m.MemoryMB
	}
	return 0
}

func (m *CreateDockerRequestResources) GetCpu() float32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

type CreateDockerResponse struct {
	Msg                  string                          `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Container            *CreateDockerResponse_Container `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CreateDockerResponse) Reset()         { *m = CreateDockerResponse{} }
func (m *CreateDockerResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDockerResponse) ProtoMessage()    {}
func (*CreateDockerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{1}
}

func (m *CreateDockerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDockerResponse.Unmarshal(m, b)
}
func (m *CreateDockerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDockerResponse.Marshal(b, m, deterministic)
}
func (m *CreateDockerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDockerResponse.Merge(m, src)
}
func (m *CreateDockerResponse) XXX_Size() int {
	return xxx_messageInfo_CreateDockerResponse.Size(m)
}
func (m *CreateDockerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDockerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDockerResponse proto.InternalMessageInfo

func (m *CreateDockerResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *CreateDockerResponse) GetContainer() *CreateDockerResponse_Container {
	if m != nil {
		return m.Container
	}
	return nil
}

type CreateDockerResponse_Container struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                int32    `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Image                string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDockerResponse_Container) Reset()         { *m = CreateDockerResponse_Container{} }
func (m *CreateDockerResponse_Container) String() string { return proto.CompactTextString(m) }
func (*CreateDockerResponse_Container) ProtoMessage()    {}
func (*CreateDockerResponse_Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{1, 0}
}

func (m *CreateDockerResponse_Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDockerResponse_Container.Unmarshal(m, b)
}
func (m *CreateDockerResponse_Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDockerResponse_Container.Marshal(b, m, deterministic)
}
func (m *CreateDockerResponse_Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDockerResponse_Container.Merge(m, src)
}
func (m *CreateDockerResponse_Container) XXX_Size() int {
	return xxx_messageInfo_CreateDockerResponse_Container.Size(m)
}
func (m *CreateDockerResponse_Container) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDockerResponse_Container.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDockerResponse_Container proto.InternalMessageInfo

func (m *CreateDockerResponse_Container) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateDockerResponse_Container) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *CreateDockerResponse_Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CreateDockerResponse_Container) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type StartDockerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartDockerRequest) Reset()         { *m = StartDockerRequest{} }
func (m *StartDockerRequest) String() string { return proto.CompactTextString(m) }
func (*StartDockerRequest) ProtoMessage()    {}
func (*StartDockerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{2}
}

func (m *StartDockerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartDockerRequest.Unmarshal(m, b)
}
func (m *StartDockerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartDockerRequest.Marshal(b, m, deterministic)
}
func (m *StartDockerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartDockerRequest.Merge(m, src)
}
func (m *StartDockerRequest) XXX_Size() int {
	return xxx_messageInfo_StartDockerRequest.Size(m)
}
func (m *StartDockerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartDockerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartDockerRequest proto.InternalMessageInfo

func (m *StartDockerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StartDockerResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartDockerResponse) Reset()         { *m = StartDockerResponse{} }
func (m *StartDockerResponse) String() string { return proto.CompactTextString(m) }
func (*StartDockerResponse) ProtoMessage()    {}
func (*StartDockerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{3}
}

func (m *StartDockerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartDockerResponse.Unmarshal(m, b)
}
func (m *StartDockerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartDockerResponse.Marshal(b, m, deterministic)
}
func (m *StartDockerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartDockerResponse.Merge(m, src)
}
func (m *StartDockerResponse) XXX_Size() int {
	return xxx_messageInfo_StartDockerResponse.Size(m)
}
func (m *StartDockerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartDockerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartDockerResponse proto.InternalMessageInfo

func (m *StartDockerResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type StopDockerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopDockerRequest) Reset()         { *m = StopDockerRequest{} }
func (m *StopDockerRequest) String() string { return proto.CompactTextString(m) }
func (*StopDockerRequest) ProtoMessage()    {}
func (*StopDockerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{4}
}

func (m *StopDockerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopDockerRequest.Unmarshal(m, b)
}
func (m *StopDockerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopDockerRequest.Marshal(b, m, deterministic)
}
func (m *StopDockerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopDockerRequest.Merge(m, src)
}
func (m *StopDockerRequest) XXX_Size() int {
	return xxx_messageInfo_StopDockerRequest.Size(m)
}
func (m *StopDockerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopDockerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopDockerRequest proto.InternalMessageInfo

func (m *StopDockerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StopDockerResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopDockerResponse) Reset()         { *m = StopDockerResponse{} }
func (m *StopDockerResponse) String() string { return proto.CompactTextString(m) }
func (*StopDockerResponse) ProtoMessage()    {}
func (*StopDockerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{5}
}

func (m *StopDockerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopDockerResponse.Unmarshal(m, b)
}
func (m *StopDockerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopDockerResponse.Marshal(b, m, deterministic)
}
func (m *StopDockerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopDockerResponse.Merge(m, src)
}
func (m *StopDockerResponse) XXX_Size() int {
	return xxx_messageInfo_StopDockerResponse.Size(m)
}
func (m *StopDockerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopDockerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopDockerResponse proto.InternalMessageInfo

func (m *StopDockerResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SuspendDockerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuspendDockerRequest) Reset()         { *m = SuspendDockerRequest{} }
func (m *SuspendDockerRequest) String() string { return proto.CompactTextString(m) }
func (*SuspendDockerRequest) ProtoMessage()    {}
func (*SuspendDockerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{6}
}

func (m *SuspendDockerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuspendDockerRequest.Unmarshal(m, b)
}
func (m *SuspendDockerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuspendDockerRequest.Marshal(b, m, deterministic)
}
func (m *SuspendDockerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuspendDockerRequest.Merge(m, src)
}
func (m *SuspendDockerRequest) XXX_Size() int {
	return xxx_messageInfo_SuspendDockerRequest.Size(m)
}
func (m *SuspendDockerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SuspendDockerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SuspendDockerRequest proto.InternalMessageInfo

func (m *SuspendDockerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SuspendDockerResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuspendDockerResponse) Reset()         { *m = SuspendDockerResponse{} }
func (m *SuspendDockerResponse) String() string { return proto.CompactTextString(m) }
func (*SuspendDockerResponse) ProtoMessage()    {}
func (*SuspendDockerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{7}
}

func (m *SuspendDockerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuspendDockerResponse.Unmarshal(m, b)
}
func (m *SuspendDockerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuspendDockerResponse.Marshal(b, m, deterministic)
}
func (m *SuspendDockerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuspendDockerResponse.Merge(m, src)
}
func (m *SuspendDockerResponse) XXX_Size() int {
	return xxx_messageInfo_SuspendDockerResponse.Size(m)
}
func (m *SuspendDockerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuspendDockerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuspendDockerResponse proto.InternalMessageInfo

func (m *SuspendDockerResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type RunDockerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunDockerRequest) Reset()         { *m = RunDockerRequest{} }
func (m *RunDockerRequest) String() string { return proto.CompactTextString(m) }
func (*RunDockerRequest) ProtoMessage()    {}
func (*RunDockerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{8}
}

func (m *RunDockerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunDockerRequest.Unmarshal(m, b)
}
func (m *RunDockerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunDockerRequest.Marshal(b, m, deterministic)
}
func (m *RunDockerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunDockerRequest.Merge(m, src)
}
func (m *RunDockerRequest) XXX_Size() int {
	return xxx_messageInfo_RunDockerRequest.Size(m)
}
func (m *RunDockerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunDockerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunDockerRequest proto.InternalMessageInfo

type RunDockerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunDockerResponse) Reset()         { *m = RunDockerResponse{} }
func (m *RunDockerResponse) String() string { return proto.CompactTextString(m) }
func (*RunDockerResponse) ProtoMessage()    {}
func (*RunDockerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{9}
}

func (m *RunDockerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunDockerResponse.Unmarshal(m, b)
}
func (m *RunDockerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunDockerResponse.Marshal(b, m, deterministic)
}
func (m *RunDockerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunDockerResponse.Merge(m, src)
}
func (m *RunDockerResponse) XXX_Size() int {
	return xxx_messageInfo_RunDockerResponse.Size(m)
}
func (m *RunDockerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunDockerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunDockerResponse proto.InternalMessageInfo

type InfoDockerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoDockerRequest) Reset()         { *m = InfoDockerRequest{} }
func (m *InfoDockerRequest) String() string { return proto.CompactTextString(m) }
func (*InfoDockerRequest) ProtoMessage()    {}
func (*InfoDockerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{10}
}

func (m *InfoDockerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoDockerRequest.Unmarshal(m, b)
}
func (m *InfoDockerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoDockerRequest.Marshal(b, m, deterministic)
}
func (m *InfoDockerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoDockerRequest.Merge(m, src)
}
func (m *InfoDockerRequest) XXX_Size() int {
	return xxx_messageInfo_InfoDockerRequest.Size(m)
}
func (m *InfoDockerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoDockerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoDockerRequest proto.InternalMessageInfo

func (m *InfoDockerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type InfoDockerResponse struct {
	Container            *InfoDockerResponse_Container `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *InfoDockerResponse) Reset()         { *m = InfoDockerResponse{} }
func (m *InfoDockerResponse) String() string { return proto.CompactTextString(m) }
func (*InfoDockerResponse) ProtoMessage()    {}
func (*InfoDockerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{11}
}

func (m *InfoDockerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoDockerResponse.Unmarshal(m, b)
}
func (m *InfoDockerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoDockerResponse.Marshal(b, m, deterministic)
}
func (m *InfoDockerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoDockerResponse.Merge(m, src)
}
func (m *InfoDockerResponse) XXX_Size() int {
	return xxx_messageInfo_InfoDockerResponse.Size(m)
}
func (m *InfoDockerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoDockerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoDockerResponse proto.InternalMessageInfo

func (m *InfoDockerResponse) GetContainer() *InfoDockerResponse_Container {
	if m != nil {
		return m.Container
	}
	return nil
}

type InfoDockerResponse_Container struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                int32    `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Image                string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoDockerResponse_Container) Reset()         { *m = InfoDockerResponse_Container{} }
func (m *InfoDockerResponse_Container) String() string { return proto.CompactTextString(m) }
func (*InfoDockerResponse_Container) ProtoMessage()    {}
func (*InfoDockerResponse_Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{11, 0}
}

func (m *InfoDockerResponse_Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoDockerResponse_Container.Unmarshal(m, b)
}
func (m *InfoDockerResponse_Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoDockerResponse_Container.Marshal(b, m, deterministic)
}
func (m *InfoDockerResponse_Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoDockerResponse_Container.Merge(m, src)
}
func (m *InfoDockerResponse_Container) XXX_Size() int {
	return xxx_messageInfo_InfoDockerResponse_Container.Size(m)
}
func (m *InfoDockerResponse_Container) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoDockerResponse_Container.DiscardUnknown(m)
}

var xxx_messageInfo_InfoDockerResponse_Container proto.InternalMessageInfo

func (m *InfoDockerResponse_Container) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InfoDockerResponse_Container) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *InfoDockerResponse_Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *InfoDockerResponse_Container) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type CloseDockerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseDockerRequest) Reset()         { *m = CloseDockerRequest{} }
func (m *CloseDockerRequest) String() string { return proto.CompactTextString(m) }
func (*CloseDockerRequest) ProtoMessage()    {}
func (*CloseDockerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{12}
}

func (m *CloseDockerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseDockerRequest.Unmarshal(m, b)
}
func (m *CloseDockerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseDockerRequest.Marshal(b, m, deterministic)
}
func (m *CloseDockerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseDockerRequest.Merge(m, src)
}
func (m *CloseDockerRequest) XXX_Size() int {
	return xxx_messageInfo_CloseDockerRequest.Size(m)
}
func (m *CloseDockerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseDockerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseDockerRequest proto.InternalMessageInfo

func (m *CloseDockerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CloseDockerResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseDockerResponse) Reset()         { *m = CloseDockerResponse{} }
func (m *CloseDockerResponse) String() string { return proto.CompactTextString(m) }
func (*CloseDockerResponse) ProtoMessage()    {}
func (*CloseDockerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dc8afb800c49bc8, []int{13}
}

func (m *CloseDockerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseDockerResponse.Unmarshal(m, b)
}
func (m *CloseDockerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseDockerResponse.Marshal(b, m, deterministic)
}
func (m *CloseDockerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseDockerResponse.Merge(m, src)
}
func (m *CloseDockerResponse) XXX_Size() int {
	return xxx_messageInfo_CloseDockerResponse.Size(m)
}
func (m *CloseDockerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseDockerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseDockerResponse proto.InternalMessageInfo

func (m *CloseDockerResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateDockerRequest)(nil), "CreateDockerRequest")
	proto.RegisterMapType((map[string]string)(nil), "CreateDockerRequest.EnvVarsEntry")
	proto.RegisterMapType((map[string]string)(nil), "CreateDockerRequest.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "CreateDockerRequest.PortBindingsEntry")
	proto.RegisterType((*CreateDockerRequestResources)(nil), "CreateDockerRequest.resources")
	proto.RegisterType((*CreateDockerResponse)(nil), "CreateDockerResponse")
	proto.RegisterType((*CreateDockerResponse_Container)(nil), "CreateDockerResponse.Container")
	proto.RegisterType((*StartDockerRequest)(nil), "StartDockerRequest")
	proto.RegisterType((*StartDockerResponse)(nil), "StartDockerResponse")
	proto.RegisterType((*StopDockerRequest)(nil), "StopDockerRequest")
	proto.RegisterType((*StopDockerResponse)(nil), "StopDockerResponse")
	proto.RegisterType((*SuspendDockerRequest)(nil), "SuspendDockerRequest")
	proto.RegisterType((*SuspendDockerResponse)(nil), "SuspendDockerResponse")
	proto.RegisterType((*RunDockerRequest)(nil), "RunDockerRequest")
	proto.RegisterType((*RunDockerResponse)(nil), "RunDockerResponse")
	proto.RegisterType((*InfoDockerRequest)(nil), "InfoDockerRequest")
	proto.RegisterType((*InfoDockerResponse)(nil), "InfoDockerResponse")
	proto.RegisterType((*InfoDockerResponse_Container)(nil), "InfoDockerResponse.Container")
	proto.RegisterType((*CloseDockerRequest)(nil), "CloseDockerRequest")
	proto.RegisterType((*CloseDockerResponse)(nil), "CloseDockerResponse")
}

func init() { proto.RegisterFile("docker.proto", fileDescriptor_3dc8afb800c49bc8) }

var fileDescriptor_3dc8afb800c49bc8 = []byte{
	// 653 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0x8d, 0x9d, 0x9f, 0xc6, 0x37, 0xd5, 0xa7, 0xe6, 0x3a, 0xad, 0x2c, 0xeb, 0xfb, 0xf1, 0x67,
	0x50, 0x09, 0x9b, 0x91, 0x08, 0x48, 0xb4, 0xa9, 0x10, 0x52, 0x4b, 0x17, 0x20, 0x90, 0xd0, 0x54,
	0x62, 0xc3, 0xca, 0x8d, 0x87, 0xc8, 0x6a, 0x3c, 0x36, 0x9e, 0x71, 0xa5, 0x3c, 0x08, 0xaf, 0xc1,
	0x53, 0xf0, 0x5e, 0x20, 0xcf, 0x38, 0x89, 0x53, 0x3b, 0x45, 0x5d, 0xb1, 0x9b, 0xb9, 0x39, 0xe7,
	0xdc, 0x99, 0x7b, 0xce, 0xc4, 0xb0, 0x1f, 0x26, 0xb3, 0x1b, 0x96, 0x91, 0x34, 0x4b, 0x64, 0xe2,
	0x7f, 0xeb, 0x82, 0x7d, 0x91, 0xb1, 0x40, 0xb2, 0x37, 0xaa, 0x4c, 0xd9, 0xd7, 0x9c, 0x09, 0x89,
	0x23, 0xe8, 0x46, 0x71, 0x30, 0x67, 0x8e, 0xe1, 0x19, 0x63, 0x8b, 0xea, 0x0d, 0x9e, 0xc1, 0x1e,
	0xe3, 0xb7, 0x9f, 0x82, 0x4c, 0x38, 0xa6, 0xd7, 0x1e, 0x0f, 0x26, 0xff, 0x93, 0x06, 0x32, 0xb9,
	0xd4, 0x98, 0x4b, 0x2e, 0xb3, 0x25, 0x5d, 0x31, 0xf0, 0x1d, 0xec, 0xa7, 0x49, 0x26, 0xcf, 0x23,
	0x1e, 0x46, 0x7c, 0x2e, 0x9c, 0xb6, 0x52, 0x38, 0x6e, 0x54, 0xf8, 0x58, 0x01, 0x6a, 0x99, 0x2d,
	0x2e, 0x9e, 0x40, 0x6f, 0x11, 0x5c, 0xb3, 0x85, 0x70, 0x3a, 0x4a, 0xc5, 0x6b, 0x54, 0x79, 0xaf,
	0x20, 0x9a, 0x5f, 0xe2, 0xf1, 0x08, 0x7a, 0x71, 0x92, 0x73, 0x29, 0x9c, 0xae, 0xd7, 0x1e, 0x5b,
	0xb4, 0xdc, 0xe1, 0x14, 0xfa, 0x19, 0x13, 0x49, 0x9e, 0xcd, 0x98, 0xd3, 0xf3, 0x8c, 0xf1, 0x60,
	0xf2, 0x6f, 0xa3, 0xe6, 0x0a, 0x24, 0xe8, 0x1a, 0x8f, 0x07, 0xd0, 0x9e, 0xc5, 0xa1, 0xb3, 0xa7,
	0x04, 0x8b, 0x65, 0x51, 0x09, 0xb9, 0x70, 0xfa, 0xba, 0x12, 0x72, 0x81, 0x7f, 0x83, 0x95, 0x0b,
	0x16, 0x16, 0x17, 0x13, 0x8e, 0xa5, 0xea, 0x9b, 0x42, 0xf9, 0xeb, 0x79, 0x16, 0x85, 0x73, 0xe6,
	0x80, 0x67, 0x8c, 0xfb, 0x74, 0x53, 0x70, 0x4f, 0xc1, 0x5a, 0xb7, 0x45, 0x17, 0xfa, 0x31, 0x8b,
	0x93, 0x6c, 0xf9, 0xe1, 0x5c, 0x99, 0xd3, 0xa5, 0xeb, 0xbd, 0x3a, 0x48, 0x9a, 0x3b, 0xa6, 0x67,
	0x8c, 0x4d, 0x5a, 0x2c, 0xdd, 0x29, 0xec, 0x57, 0xdd, 0x28, 0x10, 0x37, 0x6c, 0x59, 0xba, 0x5a,
	0x2c, 0x0b, 0xa7, 0x6f, 0x83, 0x45, 0xce, 0x14, 0xcb, 0xa2, 0x7a, 0x33, 0x35, 0x4f, 0x0c, 0xf7,
	0x35, 0x0c, 0x6b, 0x3e, 0x3c, 0x48, 0xe0, 0x14, 0x06, 0x15, 0x0b, 0x1e, 0x42, 0xf5, 0x7f, 0x18,
	0x30, 0xda, 0x1e, 0xbf, 0x48, 0x13, 0x2e, 0xd4, 0xac, 0x63, 0x31, 0x5f, 0x89, 0xc4, 0x62, 0x8e,
	0xaf, 0xc0, 0x9a, 0x25, 0x5c, 0x06, 0x11, 0x67, 0x99, 0x12, 0x1a, 0x4c, 0xfe, 0x23, 0x4d, 0x5c,
	0x72, 0xb1, 0x82, 0xd1, 0x0d, 0xc3, 0xfd, 0x0c, 0xd6, 0xba, 0x8e, 0x7f, 0x81, 0x19, 0x85, 0xa5,
	0xb8, 0x19, 0x85, 0xc5, 0x01, 0x85, 0x0c, 0xa4, 0x3e, 0x60, 0x97, 0xea, 0xcd, 0xe6, 0x71, 0xb4,
	0xab, 0x8f, 0x03, 0xa1, 0x23, 0x97, 0x29, 0x73, 0x3a, 0xaa, 0xa8, 0xd6, 0xfe, 0x63, 0xc0, 0x2b,
	0x19, 0x64, 0x72, 0xfb, 0x71, 0xdd, 0xe9, 0xe2, 0x3f, 0x01, 0x7b, 0x0b, 0xb5, 0xeb, 0xaa, 0xfe,
	0x23, 0x18, 0x5e, 0xc9, 0x24, 0xbd, 0x5f, 0xed, 0xb8, 0xe8, 0xb9, 0x01, 0xed, 0x14, 0x3b, 0x86,
	0xd1, 0x55, 0x2e, 0x52, 0xc6, 0xc3, 0xfb, 0xf5, 0x9e, 0xc2, 0xe1, 0x1d, 0xdc, 0x4e, 0x49, 0x84,
	0x03, 0x9a, 0xf3, 0x2d, 0x39, 0xdf, 0x86, 0x61, 0xa5, 0xa6, 0xa9, 0xc5, 0x45, 0xde, 0xf2, 0x2f,
	0xc9, 0xfd, 0x8d, 0xbf, 0x1b, 0x80, 0x55, 0x54, 0xd9, 0xf6, 0xac, 0xea, 0xb7, 0xa1, 0xfc, 0xfe,
	0x87, 0xd4, 0x71, 0x7f, 0xc6, 0xed, 0x8b, 0x45, 0x22, 0xd8, 0x6f, 0xdd, 0xde, 0x42, 0xed, 0x9a,
	0xe6, 0xe4, 0xa7, 0x09, 0x3d, 0x0d, 0xc2, 0x97, 0xd0, 0xd3, 0x89, 0xc6, 0x51, 0xd3, 0xbf, 0x92,
	0x7b, 0xd8, 0x18, 0x78, 0xbf, 0x85, 0x2f, 0xa0, 0xab, 0xa2, 0x85, 0x36, 0xa9, 0x07, 0xd1, 0x1d,
	0x91, 0x86, 0xdc, 0xf9, 0x2d, 0x9c, 0xc2, 0x5e, 0x69, 0x39, 0x1e, 0x92, 0xa6, 0x90, 0xb8, 0x47,
	0xa4, 0x31, 0x13, 0x7e, 0x0b, 0x09, 0xb4, 0x69, 0xce, 0x71, 0x48, 0xee, 0x26, 0xc1, 0x45, 0x52,
	0x0f, 0x42, 0x0b, 0x9f, 0x41, 0xa7, 0x88, 0x2b, 0x22, 0xa9, 0x45, 0xdb, 0xb5, 0x49, 0x3d, 0xc9,
	0xfa, 0x52, 0x6a, 0x82, 0x68, 0x93, 0xfa, 0xbc, 0xdd, 0x11, 0x69, 0x18, 0xaf, 0x6e, 0x54, 0xa4,
	0x04, 0x91, 0xd4, 0xa2, 0xe7, 0xda, 0x0d, 0x01, 0xf2, 0x5b, 0xd7, 0x3d, 0xf5, 0x91, 0x7c, 0xfe,
	0x2b, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x8e, 0xa9, 0x3d, 0x34, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DockerClient is the client API for Docker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DockerClient interface {
	Create(ctx context.Context, in *CreateDockerRequest, opts ...grpc.CallOption) (*CreateDockerResponse, error)
	Start(ctx context.Context, in *StartDockerRequest, opts ...grpc.CallOption) (*StartDockerResponse, error)
	Suspend(ctx context.Context, in *SuspendDockerRequest, opts ...grpc.CallOption) (*SuspendDockerResponse, error)
	Run(ctx context.Context, in *RunDockerRequest, opts ...grpc.CallOption) (*RunDockerResponse, error)
	Stop(ctx context.Context, in *StopDockerRequest, opts ...grpc.CallOption) (*StopDockerResponse, error)
	Close(ctx context.Context, in *CloseDockerRequest, opts ...grpc.CallOption) (*CloseDockerResponse, error)
	Info(ctx context.Context, in *InfoDockerRequest, opts ...grpc.CallOption) (*InfoDockerResponse, error)
}

type dockerClient struct {
	cc *grpc.ClientConn
}

func NewDockerClient(cc *grpc.ClientConn) DockerClient {
	return &dockerClient{cc}
}

func (c *dockerClient) Create(ctx context.Context, in *CreateDockerRequest, opts ...grpc.CallOption) (*CreateDockerResponse, error) {
	out := new(CreateDockerResponse)
	err := c.cc.Invoke(ctx, "/Docker/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerClient) Start(ctx context.Context, in *StartDockerRequest, opts ...grpc.CallOption) (*StartDockerResponse, error) {
	out := new(StartDockerResponse)
	err := c.cc.Invoke(ctx, "/Docker/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerClient) Suspend(ctx context.Context, in *SuspendDockerRequest, opts ...grpc.CallOption) (*SuspendDockerResponse, error) {
	out := new(SuspendDockerResponse)
	err := c.cc.Invoke(ctx, "/Docker/Suspend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerClient) Run(ctx context.Context, in *RunDockerRequest, opts ...grpc.CallOption) (*RunDockerResponse, error) {
	out := new(RunDockerResponse)
	err := c.cc.Invoke(ctx, "/Docker/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerClient) Stop(ctx context.Context, in *StopDockerRequest, opts ...grpc.CallOption) (*StopDockerResponse, error) {
	out := new(StopDockerResponse)
	err := c.cc.Invoke(ctx, "/Docker/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerClient) Close(ctx context.Context, in *CloseDockerRequest, opts ...grpc.CallOption) (*CloseDockerResponse, error) {
	out := new(CloseDockerResponse)
	err := c.cc.Invoke(ctx, "/Docker/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dockerClient) Info(ctx context.Context, in *InfoDockerRequest, opts ...grpc.CallOption) (*InfoDockerResponse, error) {
	out := new(InfoDockerResponse)
	err := c.cc.Invoke(ctx, "/Docker/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DockerServer is the server API for Docker service.
type DockerServer interface {
	Create(context.Context, *CreateDockerRequest) (*CreateDockerResponse, error)
	Start(context.Context, *StartDockerRequest) (*StartDockerResponse, error)
	Suspend(context.Context, *SuspendDockerRequest) (*SuspendDockerResponse, error)
	Run(context.Context, *RunDockerRequest) (*RunDockerResponse, error)
	Stop(context.Context, *StopDockerRequest) (*StopDockerResponse, error)
	Close(context.Context, *CloseDockerRequest) (*CloseDockerResponse, error)
	Info(context.Context, *InfoDockerRequest) (*InfoDockerResponse, error)
}

// UnimplementedDockerServer can be embedded to have forward compatible implementations.
type UnimplementedDockerServer struct {
}

func (*UnimplementedDockerServer) Create(ctx context.Context, req *CreateDockerRequest) (*CreateDockerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDockerServer) Start(ctx context.Context, req *StartDockerRequest) (*StartDockerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedDockerServer) Suspend(ctx context.Context, req *SuspendDockerRequest) (*SuspendDockerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Suspend not implemented")
}
func (*UnimplementedDockerServer) Run(ctx context.Context, req *RunDockerRequest) (*RunDockerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedDockerServer) Stop(ctx context.Context, req *StopDockerRequest) (*StopDockerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedDockerServer) Close(ctx context.Context, req *CloseDockerRequest) (*CloseDockerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedDockerServer) Info(ctx context.Context, req *InfoDockerRequest) (*InfoDockerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}

func RegisterDockerServer(s *grpc.Server, srv DockerServer) {
	s.RegisterService(&_Docker_serviceDesc, srv)
}

func _Docker_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDockerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Docker/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerServer).Create(ctx, req.(*CreateDockerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Docker_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartDockerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Docker/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerServer).Start(ctx, req.(*StartDockerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Docker_Suspend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SuspendDockerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerServer).Suspend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Docker/Suspend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerServer).Suspend(ctx, req.(*SuspendDockerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Docker_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunDockerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Docker/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerServer).Run(ctx, req.(*RunDockerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Docker_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopDockerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Docker/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerServer).Stop(ctx, req.(*StopDockerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Docker_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseDockerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Docker/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerServer).Close(ctx, req.(*CloseDockerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Docker_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoDockerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Docker/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerServer).Info(ctx, req.(*InfoDockerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Docker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Docker",
	HandlerType: (*DockerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Docker_Create_Handler,
		},
		{
			MethodName: "Start",
			Handler:    _Docker_Start_Handler,
		},
		{
			MethodName: "Suspend",
			Handler:    _Docker_Suspend_Handler,
		},
		{
			MethodName: "Run",
			Handler:    _Docker_Run_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Docker_Stop_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _Docker_Close_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Docker_Info_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "docker.proto",
}
